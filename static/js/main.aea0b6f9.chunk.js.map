{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","index.js"],"names":["Navbar","props","className","href","title","type","id","about","placeholder","prototype","PropTypes","string","isRequired","aboutText","defaultProps","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","ReactDOM","render","StrictMode"],"mappings":"iOAGe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAU,8CAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAAsCF,EAAMG,QAC5C,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,oBAEF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,qBAEF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,SAAkCF,EAAMM,aAG5C,uBAAML,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBG,KAAK,SAASG,YAAY,SAAS,aAAW,WACnF,wBAAQN,UAAU,0BAA0BG,KAAK,SAAjD,+BASdL,EAAOS,UAAY,CAACL,MAAOM,IAAUC,OAAOC,WACxBC,UAAWH,IAAUC,OAAOC,YAIhDZ,EAAOc,aAAe,CAClBV,MAAO,gBACPG,MAAO,iB,WCvCI,SAASQ,EAASd,GAI9B,IAuCA,EAAwBe,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAIC,OACI,qCACA,sBAAKhB,UAAY,YAAjB,UACI,6BAAKD,EAAMkB,UACX,qBAAKjB,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAekB,MAASH,EAAMI,SA3BxC,SAACC,GAEtBJ,EAAQI,EAAMC,OAAOH,QAyBoEd,GAAG,QAAQkB,KAAK,SAEnG,wBAAQtB,UAAW,uBAAuBuB,QAlD5B,WAEpB,IAAIC,EAAUT,EAAKU,cACnBT,EAAQQ,IA+CF,mCACA,wBAAQxB,UAAW,uBAAuBuB,QA9C5B,WAEpB,IAAIC,EAAUT,EAAKW,cACnBV,EAAQQ,IA2CF,kCACA,wBAAQxB,UAAW,uBAAuBuB,QA1CzB,WAGvBP,EADc,KAwCR,wBACA,wBAAQhB,UAAW,uBAAuBuB,QA3B/B,WACjBI,QAAQC,IAAI,aACZ,IAAIb,EAAOc,SAASC,eAAe,SACnCf,EAAKgB,SACLC,UAAUC,UAAUC,UAAUnB,EAAKG,QAuB7B,uBACA,wBAAQlB,UAAW,uBAAuBuB,QArBxB,WACxB,IAAIC,EAAUT,EAAKoB,MAAM,QACzBnB,EAAQQ,EAAQY,KAAK,OAmBf,oCAGH,sBAAKpC,UAAU,iBAAf,UACI,mDACA,8BAAIe,EAAKoB,MAAM,KAAKE,OAAQ,EAA5B,cAA0CtB,EAAKsB,OAA/C,iBACA,8BAAI,KAAQtB,EAAKoB,MAAM,KAAKE,OAA5B,uBACA,8BAAI,IAAOtB,EAAKoB,MAAM,KAAKE,OAA3B,wBAEA,yCACA,4BAAItB,UCrCDuB,MA1Bf,WAWE,OACE,qCAEA,cAACxC,EAAD,CAAQI,MAAM,cACd,qBAAKF,UAAU,iBAAf,SACE,cAACa,EAAD,CAAUI,QAAU,oCChB1BsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASC,eAAe,W","file":"static/js/main.aea0b6f9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">About</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n// function name .proptype for : checking the if some one send wrong syntex like string in place of number or vice-versa\r\nNavbar.prototype = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// .isrequired is used to make something compusory so, in most of case of props we use .isrequired\r\nNavbar.defaultProps = {\r\n    title: \"Default title\",\r\n    about: \"Default about\"\r\n} ","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n   //text = \"new text\"; // wrong way to change state.\r\n   //setText (\"New text\");\r\n\r\n   const handleUpClick = () => {\r\n     //console.log(\"upper case was clicked\" + text);\r\n     let newText = text.toUpperCase();\r\n     setText(newText);\r\n   };\r\n   const handleLoClick = () => {\r\n     //console.log(\"upper case was clicked\" + text);\r\n     let newText = text.toLowerCase();\r\n     setText(newText);\r\n   };\r\n   const handleClearClick = () => {\r\n     //console.log(\"upper case was clicked\" + text);\r\n     let newText = \"\";\r\n     setText(newText);\r\n   };\r\n\r\n   //    const handleUpClick = () =>{\r\n   //     //console.log(\"upper case was clicked\" + text);\r\n   //     let newText = text.toUpperCase();\r\n   //     setText(newText);\r\n\r\n   const handelOnChange = (event) => {\r\n     //console.log(\"onChange\");\r\n     setText(event.target.value);\r\n   };\r\n\r\n   const handleCopy = () =>{\r\n     console.log(\"i am copy\");\r\n     let text = document.getElementById(\"myBox\");\r\n     text.select(); // complete text will be selected.\r\n     navigator.clipboard.writeText(text.value); // and using navigator used to copy complete text value.\r\n   };\r\n\r\n   const handleEctraSpaces = () => {\r\n     let newText = text.split(/[ ]+/); // use if regx\r\n     setText(newText.join(\" \"))\r\n   }\r\n// this is for the text area to type the text once onclicekd is used.\r\n\r\n   const [text, setText] = useState(\"\");\r\n   // text is a value \r\n   // setText is a function \r\n\r\n    return (\r\n        <>\r\n        <div className = \"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value = {text} onChange = {handelOnChange} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n           <button className= \"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Upppercase</button>\r\n           <button className= \"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n           <button className= \"btn btn-primary mx-2\" onClick={handleClearClick}>Clear text</button>\r\n           <button className= \"btn btn-primary mx-2\" onClick={handleCopy}>Copy text</button>\r\n           <button className= \"btn btn-primary mx-2\" onClick={handleEctraSpaces}>Remove Extra Speces</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\">\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length -1} Words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read </p>\r\n            <p>{0.08 * text.split(\" \").length} Minutes to speak </p>\r\n\r\n            <h1>Preview</h1>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// onlick function call hoga\r\n//text.split(\" \") this will give me a Array.and text.split(\" \").length will give the size of Array.","import './App.css';\n//import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n//import React, { useState } from 'react';\n\n\nfunction App() {\n  // const [mode, setMode] = useState('light');\n\n  // const toggleMode = ()=>{\n  //   if(mode === 'light'){\n  //     setMode('dark')\n  //   }else{\n  //     setMode('light')\n  //   }\n    \n  // }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} /> */}\n    <Navbar title=\"Textutils\" />\n    <div className=\"container my-3\"> \n      <TextForm heading = \"Enter the text to analyze\"/>\n      {/* <About/> */}\n    </div>\n\n    </>\n\n\n  );\n}\n\nexport default App;\n\n\n\n// comments:\n// my-3 is going to give margine of 3 in y-axis.\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />  \n  </React.StrictMode>,\n  document.getElementById('root') // this <app/>  jo jo changes app.js me hoga usko complete karne ke baad wo index.js me aa jaiyaga then do \n  // documet.getelementby id hai root wali wo reflect hoga page par which is in puclic folder of index.html.\n   \n);\n"],"sourceRoot":""}